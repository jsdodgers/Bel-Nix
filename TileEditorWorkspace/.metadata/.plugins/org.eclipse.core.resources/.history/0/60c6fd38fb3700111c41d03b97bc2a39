import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;

public class Simulator
{
	public static void main (String[] args) {
		int length = 0;
		ArrayList<Integer[]> customerArrivals = new ArrayList<Integer[]>();
		Theater theater = new Theater();
		try {
			System.out.println(args[0]);
			Scanner scanner = new Scanner(new File(args[0]));
			System.out.println(	scanner.nextLine());
			length = scanner.nextInt()*60;
			theater.setWindowCount(scanner.nextInt());
			boolean singleLine = false;
			if (scanner.next().equals("S")) {
				theater.setLineCount(1);
				System.out.println("S");
				singleLine = true;
			}
			else {
				theater.setLineCount(theater.getWindowCount());
			}
			System.out.println("HERE");
			for (int n=0;n<theater.getWindowCount();n++) {
				int next = scanner.nextInt();
				System.out.println(next);
				theater.addWindow(new Window(next, n));
			}
			scanner.nextLine();
			String nextLine = scanner.nextLine();
			System.out.println("hi - " + nextLine);
			while (!nextLine.equals("END")) {
				Scanner scanner2 = new Scanner(nextLine);
				customerArrivals.add(new Integer[]{scanner2.nextInt(),scanner2.nextInt()});
				nextLine = scanner.nextLine();
			}
			System.out.println(nextLine);
			while (theater.getTime()<length) {
				System.out.println(theater.getTime());
				theater.incrementTime();
				for (int n=0;n<theater.customerCount();n++) {
					Customer customer = theater.getCustomer(n);
					if (customer.isInLine()) {
						customer.waitOneSec();
					}
				}
				for (int n=0;n<theater.getWindowCount();n++) {
					if (theater.getWindow(n).getCustomer()!=null) {
						theater.getWindow(n).incrementTimeWithCustomer();
					}
					else {
						theater.getWindow(n).incrementIdle();
					}
				}
				for (int n=0;n<customerArrivals.size();n++) {
					if (theater.getTime()==customerArrivals.get(n)[1]) {
						for (int m=0;m<customerArrivals.get(n)[0];m++) {
							theater.addCustomerToLine(new Customer(customerArrivals.get(n)[1]));
						}
					}
				}
				for (int n=0;n<theater.getWindowCount();n++) {
					if (theater.getWindow(n).getCustomer()==null) {
						if (singleLine) {
							if (!theater.getLine(0).isEmpty()) {
								theater.getWindow(n).setCustomer(theater.getLine(0).front());
								theater.getLine(0).dequeue();
							}
						}
						else {
							if(!theater.getLine(n).isEmpty()) {
								theater.getWindow(n).setCustomer(theater.getLine(n).front());
								theater.getLine(n).dequeue();
							}
						}
					}
				}
			}
			System.out.println(theater.getLineCount());
		}
		catch (FileNotFoundException e) {
			System.out.println("File does not exist");
		}
		
	}
}
