import java.util.ArrayList;
public class Theater
{
	private int time;
	private int windowCount;
	private int lineCount;
	private ArrayList<Queue<Customer>> lines;
	private ArrayList<Window> windows;
	private ArrayList<Customer> customers;
	
	
	public Theater () {
		time = 0;
		windowCount = 0;
		lineCount = 0;
		lines = new ArrayList<Queue<Customer>>();
		windows = new ArrayList<Window>();
		customers = new ArrayList<Customer>();
	}
	
	public int getTime() {
		return time;
	}
	
	public void incrementTime() {
		time++;
	}
	
	public int getWindowCount() {
		return windowCount;
	}
	
	public void setWindowCount(int count) {
		windowCount = count;
	}
	
	public int getLineCount() {
		return lineCount;
	}
	
	public void setLineCount(int count) {
		lineCount = count;
	}
	
	public Queue<Customer> getLine (int lineNum) {
		return lines.get(lineNum);
	}
	
	public void addLine () {
		lines.add(new Queue<Customer>());
	}
	
	public void addWindow (Window window) {
		windows.add(window);
	}
	
	public Window getWindow(int windowNum) {
		return windows.get(windowNum);
	}
	
	public Customer getCustomer(int customerNum) {
		System.out.println("skldjkf - --  "+ customerNum + " ----- " + customers.size());
		return customers.get(customerNum);
	}
	
	public int customerCount() {
		return customers.size();
	}
	
	public int windowCount() {
		return windows.size();
	}
	
	public void addCustomerToLine(Customer c) {
		customers.add(c);
		if (lineCount == 1) {
			lines.get(0).enqueue(c);
		}
		else {
			int line1 = 0;
			for (int n=1;n<lines.size();n++) {
				if (lines.get(n).getCount()<lines.get(line1).getCount()) {
					line1 = n;
				}
			}
			lines.get(line1).enqueue(c);
			c.setLine(line1);
			c.setInLine(true);
		}
	}
}
